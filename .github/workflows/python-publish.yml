# This workflow will upload a Python Package to PyPI when a release is created
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python#publishing-to-package-registries

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: pypi-publish-workflow

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      skip_tests:
        description: "manual-trigger"
        required: false
        default: false
        type: boolean

permissions:
  contents: read

jobs:
  release-build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install build pytest pytest-cov
          python -m pip install -r requirements.txt

      - name: Install package
        run: pip install -e .
        
      - name: Test with pytest
        if: ${{ github.event.inputs.skip_tests != 'true' }}
        run: |
          pytest test/ --cov=src/linden --cov-report=xml

      - name: Debug - List files
        run: |
          ls -la
          find . -name "coverage.xml" -o -name "*.xml"
      
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          
  #     - name: Build release distributions
  #       run: |
  #         python -m build

  #     - name: Upload distributions
  #       uses: actions/upload-artifact@v4
  #       with:
  #         name: release-dists
  #         path: dist/

  # pypi-publish:
  #   runs-on: ubuntu-latest
  #   needs:
  #     - release-build
  #   permissions:
  #     id-token: write

  #   environment:
  #     name: pypi


  #   steps:
  #     - name: Retrieve release distributions
  #       uses: actions/download-artifact@v4
  #       with:
  #         name: release-dists
  #         path: dist/

  #     - name: Publish release distributions to PyPI
  #       uses: pypa/gh-action-pypi-publish@release/v1
  #       with:
  #         packages-dir: dist/
